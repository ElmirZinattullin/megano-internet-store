
def get_cart_service(request: HttpRequest) -> Union[UserCartService, AnonimCartService]:
    """Функция для получения сервиса для работы с корзиной. Если пользователь анонимный,
    то возвращает сервис для Анонимной корзины работающий на сессиях. Иначе возвращает сервис для корзины пользователя,
    работающий через БД.
    """
    # if request.user.is_anonymous:
    #     return AnonimCartService(request)
    # else:
    #     return UserCartService(request)

    return AnonimCartService(request)


def login_cart(request: HttpRequest) -> None:
    """Обновление пользовательской корзины при входе пользователя, все записи анонимной корзины мигрируют в
    пользовательскую корзину"""
    # anonim_cart = AnonimCartService(request)
    # if anonim_cart.session_cart:
    #     user_cart = _merge_session_cart_to_user_cart(request, anonim_cart)
    # else:
    #     user_cart = get_cart_service(request)
    # user_cart.get_upd_length()
    return
